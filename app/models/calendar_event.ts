import { DateTime } from "luxon";

import { BaseModel } from "@adonisjs/lucid/orm";

import { typedColumn } from "#decorators/typed_model";
import { preloadRelations } from "#scopes/preload_helper";
import { handleSearchQuery } from "#scopes/search_helper";
import { handleSortQuery } from "#scopes/sort_helper";

export default class CalendarEvent extends BaseModel {
  @typedColumn({ isPrimary: true, type: "integer" })
  declare id: number;

  @typedColumn({ type: "string", optional: true, autoGenerated: true })
  declare googleCalId: string | null;

  get isGoogleEvent(): boolean {
    return this.googleCalId !== null;
  }

  @typedColumn.dateTime({})
  declare startTime: DateTime;

  @typedColumn.dateTime({})
  declare endTime: DateTime;

  @typedColumn({ type: "string", optional: true })
  declare location: string | null;

  @typedColumn({ type: "string" })
  declare name: string;

  @typedColumn({ type: "string", optional: true })
  declare description: string | null;

  @typedColumn.dateTime({ autoCreate: true })
  declare createdAt: DateTime;

  @typedColumn.dateTime({ autoCreate: true, autoUpdate: true })
  declare updatedAt: DateTime;

  static preloadRelations = preloadRelations();
  static handleSearchQuery = handleSearchQuery();
  static handleSortQuery = handleSortQuery();
}
